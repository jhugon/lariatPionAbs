LArIAT Pion Absorption Analysis
===============================

This repository holds code for the LArIAT pion absorption analysis. The code
here processes the anaTree files produced by LArIATSoft.

The .C parts of the code are meant to create tree friends for the main anaTrees
with higher-level variables. the .py parts of the code use tree.Draw() to
create histograms and paint them to image files

Tree Info
---------

in the file it is usually "anatree/anatree" and the branches are:

  ::

  ******************************************************************************
  *Tree    :anatree   : analysis tree                                          *
  *        :          : Tree compression factor =  12.31                       *
  ******************************************************************************
  *Br    0 :run       : run/I                                                  *
  *Br    1 :subrun    : subrun/I                                               *
  *Br    2 :event     : event/I                                                *
  *Br    3 :evttime   : evttime/D                                              *
  *Br    4 :efield    : efield[3]/D                                            *
  *Br    5 :t0        : t0/I                                                   *
  *Br    6 :nclus     : nclus/I                                                *
  *Br    7 :clustertwire : clustertwire[nclus]/D                               *
  *Br    8 :clusterttick : clusterttick[nclus]/D                               *
  *Br    9 :cluendwire : cluendwire[nclus]/D                                   *
  *Br   10 :cluendtick : cluendtick[nclus]/D                                   *
  *Br   11 :cluplane  : cluplane[nclus]/I                                      *
  *Br   12 :ntracks_reco : ntracks_reco/I                                      *
  *Br   13 :trkvtxx   : trkvtxx[ntracks_reco]/D                                *
  *Br   14 :trkvtxy   : trkvtxy[ntracks_reco]/D                                *
  *Br   15 :trkvtxz   : trkvtxz[ntracks_reco]/D                                *
  *Br   16 :trkendx   : trkendx[ntracks_reco]/D                                *
  *Br   17 :trkendy   : trkendy[ntracks_reco]/D                                *
  *Br   18 :trkendz   : trkendz[ntracks_reco]/D                                *
  *Br   19 :trkstartdcosx : trkstartdcosx[ntracks_reco]/D                      *
  *Br   20 :trkstartdcosy : trkstartdcosy[ntracks_reco]/D                      *
  *Br   21 :trkstartdcosz : trkstartdcosz[ntracks_reco]/D                      *
  *Br   22 :trkenddcosx : trkenddcosx[ntracks_reco]/D                          *
  *Br   23 :trkenddcosy : trkenddcosy[ntracks_reco]/D                          *
  *Br   24 :trkenddcosz : trkenddcosz[ntracks_reco]/D                          *
  *Br   25 :trkWCtoTPCMath : trkWCtoTPCMath/I                                  *
  *Br   26 :trklength : trklength[ntracks_reco]/D                              *
  *Br   27 :trkmomrange : trkmomrange[ntracks_reco]/D                          *
  *Br   28 :trkmommschi2 : trkmommschi2[ntracks_reco]/D                        *
  *Br   29 :trkmommsllhd : trkmommsllhd[ntracks_reco]/D                        *
  *Br   30 :ntrkhits  : ntrkhits[ntracks_reco]/I                               *
  *Br   31 :trkx      : trkx[ntracks_reco][1000]/D                             *
  *Br   32 :trky      : trky[ntracks_reco][1000]/D                             *
  *Br   33 :trkz      : trkz[ntracks_reco][1000]/D                             *
  *Br   34 :trkpitch  : trkpitch[ntracks_reco][2]/D                            *
  *Br   35 :trkhits   : trkhits[ntracks_reco][2]/I                             *
  *Br   36 :trkdedx   : trkdedx[ntracks_reco][2][1000]/D                       *
  *Br   37 :trkdqdx   : trkdqdx[ntracks_reco][2][1000]/D                       *
  *Br   38 :trkrr     : trkrr[ntracks_reco][2][1000]/D                         *
  *Br   39 :trkpitchhit : trkpitchhit[ntracks_reco][2][1000]/D                 *
  *Br   40 :trkxyz    : trkxyz[ntracks_reco][2][1000][3]/D                     *
  *Br   41 :trkke     : trkke[ntracks_reco][2]/D                               *
  *Br   42 :trkpida   : trkpida[ntracks_reco][2]/D                             *
  *Br   43 :trkpidchi2_p : trkpidchi2_p[ntracks_reco][2]/D                     *
  *Br   44 :trkpidchi2_pi : trkpidchi2_pi[ntracks_reco][2]/D                   *
  *Br   45 :trkpidchi2_mu : trkpidchi2_mu[ntracks_reco][2]/D                   *
  *Br   46 :trkpidchi2_k : trkpidchi2_k[ntracks_reco][2]/D                     *
  *Br   47 :trkpidlh_p : trkpidlh_p[ntracks_reco][2]/D                         *
  *Br   48 :trkpidlh_pi : trkpidlh_pi[ntracks_reco][2]/D                       *
  *Br   49 :trkpidlh_mu : trkpidlh_mu[ntracks_reco][2]/D                       *
  *Br   50 :trkpidlh_k : trkpidlh_k[ntracks_reco][2]/D                         *
  *Br   51 :nTrajPoint : nTrajPoint[ntracks_reco]/I                            *
  *Br   52 :pHat0_X   : pHat0_X[ntracks_reco][1000]/D                          *
  *Br   53 :pHat0_Y   : pHat0_Y[ntracks_reco][1000]/D                          *
  *Br   54 :pHat0_Z   : pHat0_Z[ntracks_reco][1000]/D                          *
  *Br   55 :trjPt_X   : trjPt_X[ntracks_reco][1000]/D                          *
  *Br   56 :trjPt_Y   : trjPt_Y[ntracks_reco][1000]/D                          *
  *Br   57 :trjPt_Z   : trjPt_Z[ntracks_reco][1000]/D                          *
  *Br   58 :trkg4id   : trkg4id[ntracks_reco]/I                                *
  *Br   59 :primarytrkkey : primarytrkkey/I                                    *
  *Br   60 :nhits     : nhits/I                                                *
  *Br   61 :hit_plane : hit_plane[nhits]/I                                     *
  *Br   62 :hit_wire  : hit_wire[nhits]/I                                      *
  *Br   63 :hit_channel : hit_channel[nhits]/I                                 *
  *Br   64 :hit_peakT : hit_peakT[nhits]/D                                     *
  *Br   65 :hit_charge : hit_charge[nhits]/D                                   *
  *Br   66 :hit_ph    : hit_ph[nhits]/D                                        *
  *Br   67 :hit_tstart : hit_tstart[nhits]/D                                   *
  *Br   68 :hit_tend  : hit_tend[nhits]/D                                      *
  *Br   69 :hit_trkid : hit_trkid[nhits]/I                                     *
  *Br   70 :hit_trkkey : hit_trkkey[nhits]/I                                   *
  *Br   71 :hit_clukey : hit_clukey[nhits]/I                                   *
  *Br   72 :hit_pk    : hit_pk[nhits]/I                                        *
  *Br   73 :hit_t     : hit_t[nhits]/I                                         *
  *Br   74 :hit_ch    : hit_ch[nhits]/I                                        *
  *Br   75 :hit_fwhh  : hit_fwhh[nhits]/I                                      *
  *Br   76 :hit_rms   : hit_rms[nhits]/D                                       *
  *Br   77 :hit_nelec : hit_nelec[nhits]/D                                     *
  *Br   78 :hit_energy : hit_energy[nhits]/D                                   *
  *Br   79 :hit_dQds  : hit_dQds[nhits]/F                                      *
  *Br   80 :hit_dEds  : hit_dEds[nhits]/F                                      *
  *Br   81 :hit_ds    : hit_ds[nhits]/F                                        *
  *Br   82 :hit_resrange : hit_resrange[nhits]/F                               *
  *Br   83 :hit_x     : hit_x[nhits]/F                                         *
  *Br   84 :hit_y     : hit_y[nhits]/F                                         *
  *Br   85 :hit_z     : hit_z[nhits]/F                                         *
  *Br   86 :nwctrks   : nwctrks/I                                              *
  *Br   87 :wctrk_XFaceCoor : wctrk_XFaceCoor[nwctrks]/D                       *
  *Br   88 :wctrk_YFaceCoor : wctrk_YFaceCoor[nwctrks]/D                       *
  *Br   89 :wctrk_momentum : wctrk_momentum[nwctrks]/D                         *
  *Br   90 :wctrk_theta : wctrk_theta[nwctrks]/D                               *
  *Br   91 :wctrk_phi : wctrk_phi[nwctrks]/D                                   *
  *Br   92 :wctrk_XDist : wctrk_XDist[nwctrks]/D                               *
  *Br   93 :wctrk_YDist : wctrk_YDist[nwctrks]/D                               *
  *Br   94 :wctrk_ZDist : wctrk_ZDist[nwctrks]/D                               *
  *Br   95 :XWireHist : XWireHist[nwctrks][1000]/D                             *
  *Br   96 :YWireHist : YWireHist[nwctrks][1000]/D                             *
  *Br   97 :XAxisHist : XAxisHist[nwctrks][1000]/D                             *
  *Br   98 :YAxisHist : YAxisHist[nwctrks][1000]/D                             *
  *Br   99 :Y_Kink    : Y_Kink[nwctrks]/D                                      *
  *Br  100 :WC1xPos   : WC1xPos[nwctrks]/F                                     *
  *Br  101 :WC1yPos   : WC1yPos[nwctrks]/F                                     *
  *Br  102 :WC1zPos   : WC1zPos[nwctrks]/F                                     *
  *Br  103 :WC2xPos   : WC2xPos[nwctrks]/F                                     *
  *Br  104 :WC2yPos   : WC2yPos[nwctrks]/F                                     *
  *Br  105 :WC2zPos   : WC2zPos[nwctrks]/F                                     *
  *Br  106 :WC3xPos   : WC3xPos[nwctrks]/F                                     *
  *Br  107 :WC3yPos   : WC3yPos[nwctrks]/F                                     *
  *Br  108 :WC3zPos   : WC3zPos[nwctrks]/F                                     *
  *Br  109 :WC4xPos   : WC4xPos[nwctrks]/F                                     *
  *Br  110 :WC4yPos   : WC4yPos[nwctrks]/F                                     *
  *Br  111 :WC4zPos   : WC4zPos[nwctrks]/F                                     *
  *Br  112 :ntof      : ntof/I                                                 *
  *Br  113 :tofObject : tofObject[ntof]/D                                      *
  *Br  114 :tof_timestamp : tof_timestamp[ntof]/D                              *
  *Br  115 :nAG       : nAG/I                                                  *
  *Br  116 :HitTimeStamp1p10_1 : HitTimeStamp1p10_1[nAG]/D                     *
  *Br  117 :HitTimeStamp1p10_2 : HitTimeStamp1p10_2[nAG]/D                     *
  *Br  118 :HitTimeStamp1p06_1 : HitTimeStamp1p06_1[nAG]/D                     *
  *Br  119 :HitTimeStamp1p06_2 : HitTimeStamp1p06_2[nAG]/D                     *
  *Br  120 :HitPulseArea1p10_1 : HitPulseArea1p10_1[nAG]/F                     *
  *Br  121 :HitPulseArea1p10_2 : HitPulseArea1p10_2[nAG]/F                     *
  *Br  122 :HitPulseArea1p06_1 : HitPulseArea1p06_1[nAG]/F                     *
  *Br  123 :HitPulseArea1p06_2 : HitPulseArea1p06_2[nAG]/F                     *
  *Br  124 :HitExist1p10_1 : HitExist1p10_1[nAG]/O                             *
  *Br  125 :HitExist1p10_2 : HitExist1p10_2[nAG]/O                             *
  *Br  126 :HitExist1p06_1 : HitExist1p06_1[nAG]/O                             *
  *Br  127 :HitExist1p06_2 : HitExist1p06_2[nAG]/O                             *
  *Br  128 :maxTrackIDE : maxTrackIDE/I                                        *
  *Br  129 :IDEEnergy : IDEEnergy[maxTrackIDE]/D                               *
  *Br  130 :IDEPos    : IDEPos[maxTrackIDE][3]/D                               *
  *Br  131 :no_primaries : no_primaries/I                                      *
  *Br  132 :geant_list_size : geant_list_size/I                                *
  *Br  133 :pdg       : pdg[geant_list_size]/I                                 *
  *Br  134 :Eng       : Eng[geant_list_size]/D                                 *
  *Br  135 :Px        : Px[geant_list_size]/D                                  *
  *Br  136 :Py        : Py[geant_list_size]/D                                  *
  *Br  137 :Pz        : Pz[geant_list_size]/D                                  *
  *Br  138 :EndEng    : EndEng[geant_list_size]/D                              *
  *Br  139 :EndPx     : EndPx[geant_list_size]/D                               *
  *Br  140 :EndPy     : EndPy[geant_list_size]/D                               *
  *Br  141 :EndPz     : EndPz[geant_list_size]/D                               *
  *Br  142 :StartPointx : StartPointx[geant_list_size]/D                       *
  *Br  143 :StartPointy : StartPointy[geant_list_size]/D                       *
  *Br  144 :StartPointz : StartPointz[geant_list_size]/D                       *
  *Br  145 :EndPointx : EndPointx[geant_list_size]/D                           *
  *Br  146 :EndPointy : EndPointy[geant_list_size]/D                           *
  *Br  147 :EndPointz : EndPointz[geant_list_size]/D                           *
  *Br  148 :Process   : Process[geant_list_size]/I                             *
  *Br  149 :NumberDaughters : NumberDaughters[geant_list_size]/I               *
  *Br  150 :Mother    : Mother[geant_list_size]/I                              *
  *Br  151 :TrackId   : TrackId[geant_list_size]/I                             *
  *Br  152 :process_primary : process_primary[geant_list_size]/I               *
  *Br  153 :G4Process : vector<string>                                         *
  *Br  154 :G4FinalProcess : vector<string>                                    *
  *Br  155 :NTrTrajPts : NTrTrajPts[no_primaries]/I                            *
  *Br  156 :MidPosX   : MidPosX[no_primaries][5000]/D                          *
  *Br  157 :MidPosY   : MidPosY[no_primaries][5000]/D                          *
  *Br  158 :MidPosZ   : MidPosZ[no_primaries][5000]/D                          *
  *Br  159 :MidPx     : MidPx[no_primaries][5000]/D                            *
  *Br  160 :MidPy     : MidPy[no_primaries][5000]/D                            *
  *Br  161 :MidPz     : MidPz[no_primaries][5000]/D                            *
  *Br  162 :InteractionPoint : vector<int>                                     *
  *Br  163 :InteractionPointType : vector<int>                                 *
  *Br  164 :no_mcshowers : no_mcshowers/I                                      *
  *Br  165 :mcshwr_origin : mcshwr_origin[no_mcshowers]/D                      *
  *Br  166 :mcshwr_pdg : mcshwr_pdg[no_mcshowers]/D                            *
  *Br  167 :mcshwr_TrackId : mcshwr_TrackId[no_mcshowers]/I                    *
  *Br  168 :mcshwr_startX : mcshwr_startX[no_mcshowers]/D                      *
  *Br  169 :mcshwr_startY : mcshwr_startY[no_mcshowers]/D                      *
  *Br  170 :mcshwr_startZ : mcshwr_startZ[no_mcshowers]/D                      *
  *Br  171 :mcshwr_endX : mcshwr_endX[no_mcshowers]/D                          *
  *Br  172 :mcshwr_endY : mcshwr_endY[no_mcshowers]/D                          *
  *Br  173 :mcshwr_endZ : mcshwr_endZ[no_mcshowers]/D                          *
  *Br  174 :mcshwr_CombEngX : mcshwr_CombEngX[no_mcshowers]/D                  *
  *Br  175 :mcshwr_CombEngY : mcshwr_CombEngY[no_mcshowers]/D                  *
  *Br  176 :mcshwr_CombEngZ : mcshwr_CombEngZ[no_mcshowers]/D                  *
  *Br  177 :mcshwr_CombEngPx : mcshwr_CombEngPx[no_mcshowers]/D                *
  *Br  178 :mcshwr_CombEngPy : mcshwr_CombEngPy[no_mcshowers]/D                *
  *Br  179 :mcshwr_CombEngPz : mcshwr_CombEngPz[no_mcshowers]/D                *
  *Br  180 :mcshwr_CombEngE : mcshwr_CombEngE[no_mcshowers]/D                  *
  *Br  181 :mcshwr_dEdx : mcshwr_dEdx[no_mcshowers]/D                          *
  *Br  182 :mcshwr_StartDirX : mcshwr_StartDirX[no_mcshowers]/D                *
  *Br  183 :mcshwr_StartDirY : mcshwr_StartDirY[no_mcshowers]/D                *
  *Br  184 :mcshwr_StartDirZ : mcshwr_StartDirZ[no_mcshowers]/D                *
  *Br  185 :mcshwr_isEngDeposited : mcshwr_isEngDeposited[no_mcshowers]/I      *
  *Br  186 :mcshwr_Motherpdg : mcshwr_Motherpdg[no_mcshowers]/I                *
  *Br  187 :mcshwr_MotherTrkId : mcshwr_MotherTrkId[no_mcshowers]/I            *
  *Br  188 :mcshwr_MotherstartX : mcshwr_MotherstartX[no_mcshowers]/I          *
  *Br  189 :mcshwr_MotherstartY : mcshwr_MotherstartY[no_mcshowers]/I          *
  *Br  190 :mcshwr_MotherstartZ : mcshwr_MotherstartZ[no_mcshowers]/I          *
  *Br  191 :mcshwr_MotherendX : mcshwr_MotherendX[no_mcshowers]/I              *
  *Br  192 :mcshwr_MotherendY : mcshwr_MotherendY[no_mcshowers]/I              *
  *Br  193 :mcshwr_MotherendZ : mcshwr_MotherendZ[no_mcshowers]/I              *
  *Br  194 :mcshwr_Ancestorpdg : mcshwr_Ancestorpdg[no_mcshowers]/I            *
  *Br  195 :mcshwr_AncestorTrkId : mcshwr_AncestorTrkId[no_mcshowers]/I        *
  *Br  196 :mcshwr_AncestorstartX : mcshwr_AncestorstartX[no_mcshowers]/I      *
  *Br  197 :mcshwr_AncestorstartY : mcshwr_AncestorstartY[no_mcshowers]/I      *
  *Br  198 :mcshwr_AncestorstartZ : mcshwr_AncestorstartZ[no_mcshowers]/I      *
  *Br  199 :mcshwr_AncestorendX : mcshwr_AncestorendX[no_mcshowers]/I          *
  *Br  200 :mcshwr_AncestorendY : mcshwr_AncestorendY[no_mcshowers]/I          *
  *Br  201 :mcshwr_AncestorendZ : mcshwr_AncestorendZ[no_mcshowers]/I          *
  *Br  202 :nshowers  : nshowers/I                                             *
  *Br  203 :shwID     : shwI[nshowers]/I                                       *
  *Br  204 :BestPlaneShw : BestPlaneShw[nshowers]/I                            *
  *Br  205 :LengthShw : LengthShw[nshowers]/D                                  *
  *Br  206 :CosStartShw : CosStartShw[3][1000]/D                               *
  *Br  207 :CosStartXYZShw : CosStartXYZShw[3][1000]/D                         *
  *Br  208 :TotalEShw : TotalEShw[2][1000]/D                                   *
  *Br  209 :dEdxPerPlaneShw : dEdxPerPlaneShw[2][1000]/D                       *
  *Br  210 :TotalMIPEShw : TotalMIPEShw[2][1000]/D                             *

